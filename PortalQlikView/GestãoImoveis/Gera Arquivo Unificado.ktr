<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>Gera Arquivo Unificado</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
      <parameter>
        <name>OLTP</name>
        <default_value>10.209.9.227</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>REGIME</name>
        <default_value>01</default_value>
        <description/>
      </parameter>
      <parameter>
        <name>SERVIDOR</name>
        <default_value>10.209.9.227</default_value>
        <description/>
      </parameter>
    </parameters>
    <log>
      <trans-log-table>
        <connection/>
        <schema/>
        <table/>
        <size_limit_lines/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject/>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject/>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject/>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject/>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection/>
        <schema/>
        <table/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2016/04/25 17:30:31.206</created_date>
    <modified_user>-</modified_user>
    <modified_date>2016/04/25 17:30:31.206</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <connection>
    <name>bispu</name>
    <server>${SERVIDOR}</server>
    <type>POSTGRESQL</type>
    <access>Native</access>
    <database>bispu</database>
    <port>5432</port>
    <username>bispu</username>
    <password>Encrypted 2be98afc86aa7f2e4aa2fa060d3c6a69b</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>5432</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>dbSpin</name>
    <server>10.209.9.121</server>
    <type>POSTGRESQL</type>
    <access>Native</access>
    <database>dbSpin</database>
    <port>5499</port>
    <username>spu</username>
    <password>Encrypted 2be98afc86aa7f2e4cb79ce10be81bfcf</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>5499</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <order>
    <hop>
      <from>Monta Arquivo Saida_2</from>
      <to>Arquivo ODS Unificado_2</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>imoveisfederais</from>
      <to>Merge Join</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Monta Arquivo Saida</from>
      <to>Arquivo ODS Unificado</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <step>
    <name>Arquivo ODS Unificado</name>
    <type>TableOutput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>bispu</connection>
    <schema>dw_siapa</schema>
    <table>ods_unificado</table>
    <commit>1000</commit>
    <truncate>Y</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>N</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>416</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Arquivo ODS Unificado_2</name>
    <type>TableOutput</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>bispu</connection>
    <schema>dw_siapa</schema>
    <table>ods_unificado</table>
    <commit>1000</commit>
    <truncate>Y</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>N</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>960</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Merge Join</name>
    <type>MergeJoin</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <join_type>LEFT OUTER</join_type>
    <step1>Monta Arquivo Saida</step1>
    <step2>imoveisfederais</step2>
    <keys_1>
      <key>fonte</key>
      <key>nu_rip_sem_dv</key>
    </keys_1>
    <keys_2>
      <key>no_sistema_legado</key>
      <key>cd_rip</key>
    </keys_2>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>256</xloc>
      <yloc>176</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Monta Arquivo Saida</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>bispu</connection>
    <sql>
select distinct
       'DOMINIAL'::varchar(12) 
		as fonte,
		ltrim(rtrim(to_char(dw_siapa.fn_calcula_dv_rip(s.nu_rip::text)::bigint, '0000000000999')))::varchar(20)
		as nu_rip,
		s.nu_rip::bigint
		as nu_rip_sem_dv, 
		substring(coalesce(da_informacao_imov, da_inclusao_cad_imov),7,4) 
		as ano_cadastro, s.cod_municipio::integer co_municipio,
		s.sg_uf,
		(select distinct max(u.nm_uf) from bispu.public.tb_uf u where u.sg_uf = s.sg_uf)
		as nm_uf,
        replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(initcap(trim(s.nome_municipio))
		--Sul
        ,'Picarras','Balneario Picarras')
        --Suldeste
        ,'Campos Dos Goitacazes','Campos dos Goytacazes')
       	--Centro Oeste / Norte
		,'Vila Bela Da Santissima Trinda','Vila Bela da Santissima Trindade')
       	--Nordeste
		,'Espirito Santo Do Oeste','Parau'),'Assu','Açu'),'Sao Miguel De Touros','Touros')
        ,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX')
		as nome_municipio,
        coalesce(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(initcap(trim(s.nome_municipio))
		--Sul
        ,'Picarras','Balneario Picarras')
        --Suldeste
        ,'Campos Dos Goitacazes','Campos dos Goytacazes')
       	--Centro Oeste / Norte
		,'Vila Bela Da Santissima Trinda','Vila Bela da Santissima Trindade')
		--Nordeste
		,'Espirito Santo Do Oeste','Parau'),'Assu','Açu'),'Sao Miguel De Touros','Touros')
        ,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),'')|| ',' ||coalesce(s.sg_uf,'')
		as municipio_uf,
        s.ed_bairro_distrito ds_bairro, 
        coalesce(s.ed_tipo_logr,'')||' '||coalesce(s.ed_logr,'')||' '||coalesce(s.ed_numero,'')||' '||coalesce(s.ed_complemento,'') 
		as ds_endereco,
        --s.co_natureza_terreno::integer co_naturezaterreno,
        initcap(trim(s.no_natureza_terreno)) ds_natureza, 
		'União (Adm. Pub. Fed. direta)' 
		as tp_proprietario,
        replace(replace(replace(replace(replace(replace(replace(replace(replace(initcap(trim(s.no_conceituacao_terreno))
        ,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com ')
        as ds_conceituacao, 
        s.mq_area_terreno_total 
		as mq_area,
		s.valor_imovel,
		trim(initcap(s.ic_carente)) 
	    as ic_carente,
        string_agg(distinct trim(initcap(s.no_regime_utiliz))::varchar, CHR(10)) 
		as no_regime,
        replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(string_agg(distinct trim(initcap(s.no_resp::varchar)), CHR(10))
 	    ,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com '),' E ',' e ')
		as no_resp,
	    s.mq_area_construida 
		as mq_area_construida,
		s.nu_rip_primitivo,
		trim(initcap(s.no_classe_imov))
		as no_classe_imov,
		s.ed_cep,
		CASE WHEN s.sg_pais = 'BRA' THEN 'Brasileiro' WHEN s.sg_pais is null THEN 'Sem Informação' ELSE 'Estrangeiro' END 
		as ds_nacionalidade_resp,
		trim(s.sg_pais)
		as sg_pais_resp,
		CASE WHEN char_length(s.cpf_cgc) = 14 THEN 'Pessoa Jurídica' WHEN char_length(s.cpf_cgc) = 11 THEN 'Pessoa Física' ELSE 'Indefinido' END 
		as ds_person_juridica_resp,
		s.cpf_cgc
		as nu_cpf_cnpj_resp,
		CASE WHEN s.in_imovel_em_ilha = 'Imóvel em Ilha' THEN 'Sim' WHEN s.in_imovel_em_ilha = 'Normal' THEN 'Não' END
		as st_imovel_em_ilha,
		s.nu_logr_trecho_calculo,
		CASE WHEN s.tx_fundamento_incorporacao is null THEN 'Sem Informação' 
			 ELSE replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace
				  (string_agg(distinct trim(initcap(s.tx_fundamento_incorporacao::varchar)), CHR(10))
 	    		  ,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com ')
				  ,' E ',' e '),' Ou ',' ou ')	
		END ds_fundamento_incorporacao,
		CASE WHEN s.co_tipo_ocupacao = '0' THEN 'Sem Informação' 
			 WHEN s.co_tipo_ocupacao = '1' THEN 'Regular' 
			 WHEN s.co_tipo_ocupacao = '2' THEN 'Aterro' 
			 WHEN s.co_tipo_ocupacao = '3' THEN 'Faixa Praia/Margem' 
			 WHEN s.co_tipo_ocupacao = '4' THEN 'Aterro c/Faixa Praia/Margem' 
		END	ds_tipo_ocupacao,
		s.nu_utiliz,
		s.nu_inscricao_municipal,		
		replace(replace(replace(string_agg(distinct trim(initcap(s.no_situacao_testada::varchar)), CHR(10)),' Ou ',' ou '),' Mais ',' mais '),'Tres ','Três ')
		as ds_situacao_testada,
		s.pe_taxa_ocupacao::int
		as pe_taxa_ocupacao,
		CASE WHEN s.co_tipo_fracao_ideal = 'D' THEN 'Denominador'
          	 WHEN s.co_tipo_fracao_ideal = 'N' THEN 'Numerador'
          	 WHEN s.co_tipo_fracao_ideal = 'P' THEN 'Percentual'
          	 ELSE 'Sem Informação'
      	END ds_tipo_fracao_ideal,
		s.va_generico_m2_terreno_calculo::numeric
		as vl_m2_testada_calculo,
		s.da_informacao_imov::date 
		as dt_informacao_imov,
		s.da_aprovacao_lpm_lmeo::date 
		as dt_aprovacao_lpm_lmeo,
		s.nu_processo_lpm_lmeo,
		s.op_fracao_ideal_percentual,
		s.op_fracao_ideal_numerador,
		s.op_fracao_ideal_denominador,
		s.op_fracao_ideal_decimal,
		CASE WHEN s.co_tipo_fracao_ideal='D' THEN s.op_fracao_ideal_decimal
          	 WHEN s.co_tipo_fracao_ideal='N' THEN (s.op_fracao_ideal_numerador/s.op_fracao_ideal_denominador)
          	 WHEN s.co_tipo_fracao_ideal='P' THEN (s.op_fracao_ideal_percentual/100)
          	 ELSE 0
      	END
		as op_fracao_ideal_calculada,
		s.op_fator_corretivo_total::numeric,
		CASE WHEN s.nu_logr_trecho_calculo = s.nu_logr_trecho_testada1 THEN substring(s.da_inicio_avaliacao_pvg_testada1::text,1,10)::date 
          	 WHEN s.nu_logr_trecho_calculo = s.nu_logr_trecho_testada2 THEN substring(s.da_inicio_avaliacao_pvg_testada2::text,1,10)::date 
          	 WHEN s.nu_logr_trecho_calculo = s.nu_logr_trecho_testada3 THEN substring(s.da_inicio_avaliacao_pvg_testada3::text,1,10)::date 
			 WHEN s.nu_logr_trecho_calculo = s.nu_logr_trecho_testada4 THEN substring(s.da_inicio_avaliacao_pvg_testada4::text,1,10)::date 
          	 ELSE null
      	END
		as dt_avaliacao_testada_calculo,
		s.mq_area_terreno_uniao,
		s.mq_area_uniao_utilizada,
		s.mq_area_primitiva_utilizada,
		null imv_nu_matriculacartorio,
		null no_tipoimovel,
		null no_orgaoextinto,
		null no_proprietarioanterior,
		null no_situacaoincorporacao,
		null::date dt_incorporacao,
		null no_formaaquisicao,
		null::date dt_avaliacao_imovel,
		null nu_rip_utilizacao,
		null no_tipodestinacao,
		null ds_tipo_administracao,
		null uti_nu_processo,
		null ds_poder_uge,
		null ds_orgao_sup_uge,
		null ds_orgao_uge,
		null::int co_ug,
		null no_nivelrigoravaliacao,
		null::date dt_avaliacao_utilizacao,
		null::date dt_cadastro_utilizacao,
		null::date dt_inicio_utilizacao,
		null::date dt_fim_utilizacao,
		null::date dt_prazovalidadeavaliacao,
		null uti_no_beneficiario,
		null::bigint uti_nu_cpfcnpjbeneficiario,
		null uti_no_encargocessao,
		null uti_no_objetivocessao,
		null::numeric(27,4) vl_utilizacao,
		null::numeric(27,4) vl_terreno_imovel,
		null::numeric(27,4) vl_terreno_utilizacao,
		null::numeric vl_aluguel,
		null::numeric(27,4) vl_somabenfeitoria
from bispu.dw_siapa.ods_siapa_gestao s  
group by s.nu_rip, substring(coalesce(da_informacao_imov, da_inclusao_cad_imov),7,4), s.cod_municipio, s.sg_uf, s.nome_municipio, s.ed_bairro_distrito, 
         coalesce(s.ed_tipo_logr,'')||' '||coalesce(s.ed_logr,'')||' '||coalesce(s.ed_numero,'')||' '||coalesce(s.ed_complemento,''), s.co_natureza_terreno,
         s.no_natureza_terreno,s.no_conceituacao_terreno, s.mq_area_terreno_uniao, s.valor_imovel, s.ic_carente, s.nu_rip_primitivo,
		 s.no_classe_imov, s.ed_cep, s.sg_pais, s.cpf_cgc, s.in_imovel_em_ilha, s.nu_logr_trecho_calculo, s.tx_fundamento_incorporacao,
		 s.co_tipo_ocupacao, s.nu_utiliz, s.nu_inscricao_municipal, s.no_situacao_testada, s.pe_taxa_ocupacao, s.co_tipo_fracao_ideal,
		 s.va_generico_m2_terreno_calculo, s.da_informacao_imov, s.da_aprovacao_lpm_lmeo, s.nu_processo_lpm_lmeo, s.op_fracao_ideal_percentual,
		 s.op_fracao_ideal_numerador, s.op_fracao_ideal_denominador, s.op_fracao_ideal_decimal, s.op_fator_corretivo_total, s.nu_logr_trecho_testada1,
		 s.nu_logr_trecho_testada2, s.nu_logr_trecho_testada3, s.nu_logr_trecho_testada4, s.da_inicio_avaliacao_pvg_testada1,
		 s.da_inicio_avaliacao_pvg_testada2, s.da_inicio_avaliacao_pvg_testada3, s.da_inicio_avaliacao_pvg_testada4, s.mq_area_terreno_total,
		 s.mq_area_construida, s.mq_area_terreno_uniao, s.mq_area_uniao_utilizada, s.mq_area_primitiva_utilizada

union
 select distinct
		'USO ESPECIAL'::varchar(12) 
		as fonte,
		to_char(s.nu_rip_imovel::bigint, '0000000000999')::varchar(20)     	 
		as nu_rip,
       	s.nu_rip_imovel::bigint 
		as nu_rip_sem_dv,
		substring(dt_cadastro_imovel::text,1,4) 
		as dt_cadastro_imovel, 
        s.co_municipio,
		s.sg_uf,
		(select distinct max(u.nm_uf) from bispu.public.tb_uf u where u.sg_uf = s.sg_uf)
		as nm_uf,
       	case when initcap(trim(s.no_municipio)) = 'Campo Grande' and s.sg_uf = 'RN' then 'Augusto Severo'::text 
       	else
		replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(
       	replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(initcap(trim(s.no_municipio))
		--Sul
		,'Picarras','Balneario Picarras'),'Sao Lourenco D''Oeste','Sao Lourenco do Oeste'),'Santa Cruz Do Monte Castelo','Santa Cruz de Monte Castelo'),'Goio-Ere','Goioere')
		--Suldeste
		,'Suzanopolis','Suzanapolis'),'Sud Mennuci','Sud Mennucci'),'Mogi-Guacu','Mogi Guacu'),'Mogi-Mirim','Mogi Mirim')
		,'Campos Dos Goitacazes','Campos dos Goytacazes'),'Trajano De Morais','Trajano de Moraes'),'Sao Tome Das Letras','Sao Thome das Letras')
       	--Centro Oeste / Norte
		,'Vila Bela Da Santissima Trinda','Vila Bela da Santissima Trindade'),'Nova Do Mamore','Nova Mamore')
		--Nordeste
		,'Luiz Eduardo Magalhaes','Luis Eduardo Magalhaes'),'Lagedo Do Tabocal','Lajedo do Tabocal'),'Graccho Cardoso','Gracho Cardoso'),'Belem De Sao Francisco','Belem do Sao Francisco')
		,'Sao Domingos De Pombal','Sao Domingos'),'Campo De Santana','Tacima'),'Assu','Açu'),'Sao Miguel De Touros','Touros'),'Boa Saude','Januario Cicco'),'Cerro-Cora','Cerro Cora')	
		,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX') 
		end nome_municipio,
		case when initcap(trim(s.no_municipio)) = 'Campo Grande' and s.sg_uf = 'RN' then 'Augusto Severo,RN'::text 
        else
		coalesce(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(
		replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(initcap(trim(s.no_municipio))
		--Sul
       	,'Picarras','Balneario Picarras'),'Sao Lourenco D''Oeste','Sao Lourenco do Oeste'),'Santa Cruz Do Monte Castelo','Santa Cruz de Monte Castelo'),'Goio-Ere','Goioere')
		--Suldeste
       	,'Suzanopolis','Suzanapolis'),'Sud Mennuci','Sud Mennucci'),'Mogi-Guacu','Mogi Guacu'),'Mogi-Mirim','Mogi Mirim')
       	,'Campos Dos Goitacazes','Campos dos Goytacazes'),'Trajano De Morais','Trajano de Moraes'),'Sao Tome Das Letras','Sao Thome das Letras')
		--Centro Oeste / Norte
		,'Vila Bela Da Santissima Trinda','Vila Bela da Santissima Trindade'),'Nova Do Mamore','Nova Mamore')
		--Nordeste
		,'Luiz Eduardo Magalhaes','Luis Eduardo Magalhaes'),'Lagedo Do Tabocal','Lajedo do Tabocal'),'Graccho Cardoso','Gracho Cardoso'),'Belem De Sao Francisco','Belem do Sao Francisco')
		,'Sao Domingos De Pombal','Sao Domingos'),'Campo De Santana','Tacima'),'Assu','Açu'),'Sao Miguel De Touros','Touros'),'Boa Saude','Januario Cicco'),'Cerro-Cora','Cerro Cora')	
       	,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),'')|| ',' ||coalesce(s.sg_uf,'') 
		end municipio_uf,
       	s.ed_bairro_imovel ds_bairro, 
       	coalesce(s.ed_tipologradouro_imovel,'')||' '||coalesce(s.ed_logradouro_imovel,'')||' '||coalesce(s.ed_numero_imovel,'')||' '||coalesce(s.ed_complemento_imovel,'') 
		as ds_endereco,
        --s.co_naturezaterreno::integer co_naturezaterreno,
        trim(s.no_naturezaterreno) 
		as ds_natureza, 
		s.no_proprietariooficial 
		as tp_proprietario, 
		s.no_conceituacaoterreno 
		as ds_conceituacao,
       	sum(s.mq_areaterreno_imovel)
		as mq_area, 
       	sum(s.vl_imovel) --s.vl_terreno_utilizacao
		as valor_imovel, 
		'Não'::varchar(3) 
		as ic_carente, 
       	string_agg(distinct trim(initcap(s.no_regime))::varchar, CHR(10)) 
		as no_regime,
       	replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(string_agg(distinct trim(initcap(s.no_ug::varchar)), CHR(10))
	   	,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com '),' E ',' e ') 
		as no_resp,
       	(select distinct max(o.mq_areaconstruida) from bispu.dw_spiunet.ods_spiunet o where o.nu_rip_imovel = s.nu_rip_imovel) 
		as mq_area_construida,
		null nu_rip_primitivo,
		null no_classe_imov,
		s.ed_cep_imovel::varchar(8)
		as ed_cep,
		null ds_nacionalidade_resp,
		null sg_pais_resp,
		null ds_person_juridica_resp,
		null nu_cpf_cnpj_resp,	
		null st_imovel_em_ilha,
		null nu_logr_trecho_calculo,
		null ds_fundamento_incorporacao,
		null ds_tipo_ocupacao,
		null nu_utiliz,
		null nu_inscricao_municipal,
		null ds_situacao_testada,
		null::int pe_taxa_ocupacao,
		null ds_tipo_fracao_ideal,
		null::numeric vl_m2_testada_calculo,
		null::date dt_informacao_imov,
		null::date dt_aprovacao_lpm_lmeo,
		null nu_processo_lpm_lmeo,
		null::numeric(17,7) op_fracao_ideal_percentual,
		null::numeric(14,2) op_fracao_ideal_numerador,
		null::numeric(14,2) op_fracao_ideal_denominador,
		null::numeric(19,7) op_fracao_ideal_decimal,
		null::numeric op_fracao_ideal_calculada,
		null::numeric op_fator_corretivo_total,
		null::date dt_avaliacao_testada_calculo,
		null::numeric mq_area_terreno_uniao,		
		null::numeric mq_area_uniao_utilizada,
		null::numeric mq_area_primitiva_utilizada,
		s.imv_nu_matriculacartorio,
		s.no_tipoimovel,
		CASE WHEN s.no_orgaoextinto = 'SEM INFORMACAO' THEN 'Sem Informação' ELSE s.no_orgaoextinto END
		as no_orgaoextinto,
		replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(string_agg(distinct trim(initcap(s.no_proprietarioanterior::varchar)), CHR(10))
	   	,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com '),' E ',' e ')
		,' Informacao',' Informação'),' Rffsa',' RFFSA'),
		CASE WHEN s.no_situacaoincorporacao = 'Em Processo de Incorporacao' THEN 'Em Processo de Incorporação' ELSE s.no_situacaoincorporacao 
		END no_situacaoincorporacao,
		s.dt_incorporacao::date,
		s.no_formaaquisicao,
		s.dt_avaliacao_imovel::date,
		s.nu_rip_utilizacao::varchar(13),
		s.no_tipodestinacao,
		replace(string_agg(distinct trim(initcap((select distinct max(o.ds_tipo_administracao) from bispu.dw_spiunet.dim_orgao_siafi o where o.ug_executora::int = s.co_ug)::varchar)), CHR(10)),' E ',' e ')		
		as ds_tipo_administracao,
		s.uti_nu_processo,
		CASE WHEN (select distinct max(o.ds_poder_uge) from bispu.dw_spiunet.dim_orgao_siafi o where o.ug_executora::int = s.co_ug)::varchar = 'PODER EXECUTIVO' THEN 'Executivo'
          	 WHEN (select distinct max(o.ds_poder_uge) from bispu.dw_spiunet.dim_orgao_siafi o where o.ug_executora::int = s.co_ug)::varchar ='PODER JUDICIARIO' THEN 'Judiciário'
          	 WHEN (select distinct max(o.ds_poder_uge) from bispu.dw_spiunet.dim_orgao_siafi o where o.ug_executora::int = s.co_ug)::varchar ='PODER LEGISLATIVO' THEN 'Legislativo'
          	 ELSE 'Sem Informação'
      	END ds_poder_uge,
       	replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(
		string_agg(distinct trim(initcap((select distinct max(o.ds_orgao_sup_uge) from bispu.dw_spiunet.dim_orgao_siafi o where o.ug_executora::int = s.co_ug)::varchar)), CHR(10))
	   	,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com '),' E ',' e ') ,' A ',' a ')
		as ds_orgao_sup_uge,
		replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(
		string_agg(distinct trim(initcap((select distinct max(o.ds_orgao_uge) from bispu.dw_spiunet.dim_orgao_siafi o where o.ug_executora::int = s.co_ug)::varchar)), CHR(10))
	   	,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com '),' E ',' e ') ,' A ',' a ')
		as ds_orgao_uge,
		s.co_ug,
		CASE WHEN s.no_nivelrigoravaliacao = 'SI' THEN 'Sem Informação' ELSE s.no_nivelrigoravaliacao 
		END no_nivelrigoravaliacao,
		s.dt_avaliacao_utilizacao::date,
		s.dt_cadastro_utilizacao::date,
		s.dt_inicio_utilizacao::date,
		s.dt_fim_utilizacao::date,
		s.dt_prazovalidadeavaliacao,
		s.uti_no_beneficiario,
		s.uti_nu_cpfcnpjbeneficiario::bigint,
		s.uti_no_encargocessao,
		s.uti_no_objetivocessao,
		s.vl_utilizacao::numeric(27,4),
		s.vl_terreno_imovel::numeric(27,4),
		s.vl_terreno_utilizacao::numeric(27,4),
		s.vl_aluguel::numeric,
		s.vl_somabenfeitoria::numeric(27,4)
 from bispu.dw_spiunet.ods_spiunet s
 group by s.nu_rip_imovel, substring(dt_cadastro_imovel::text,1,4), s.co_municipio, s.sg_uf, s.no_municipio, s.ed_bairro_imovel,
       	coalesce(s.ed_tipologradouro_imovel,'')||' '||coalesce(s.ed_logradouro_imovel,'')||' '||coalesce(s.ed_numero_imovel,'')||' '||coalesce(s.ed_complemento_imovel,''),
        s.co_naturezaterreno,
		s.no_naturezaterreno, s.no_proprietariooficial,  s.no_conceituacaoterreno, s.ed_cep_imovel, s.imv_nu_matriculacartorio, s.no_tipoimovel, s.no_orgaoextinto,
	   	s.no_proprietarioanterior, s.no_situacaoincorporacao, s.dt_incorporacao, s.no_formaaquisicao, s.dt_avaliacao_imovel, s.nu_rip_utilizacao, s.no_tipodestinacao, s.co_ug,
		s.uti_nu_processo, s.no_nivelrigoravaliacao, s.dt_avaliacao_utilizacao, s.dt_cadastro_utilizacao, s.dt_inicio_utilizacao, s.dt_fim_utilizacao, s.dt_prazovalidadeavaliacao,
		s.uti_no_beneficiario, s.uti_nu_cpfcnpjbeneficiario, s.uti_no_encargocessao, s.uti_no_objetivocessao, s.vl_utilizacao, s.vl_terreno_imovel, s.vl_terreno_utilizacao,
		s.vl_aluguel, s.vl_somabenfeitoria
order by 1, 2</sql>
    <limit/>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>128</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Monta Arquivo Saida_2</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>bispu</connection>
    <sql>
select distinct
       'DOMINIAL'::varchar(12) 
		as fonte, 
		s.nu_rip, 
		substring(coalesce(da_informacao_imov, da_inclusao_cad_imov),7,4) 
		as ano_cadastro,
		s.sg_uf,
		(select distinct max(u.nm_uf) from bispu.public.tb_uf u where u.sg_uf = s.sg_uf)
		as nm_uf,
        replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(initcap(trim(s.nome_municipio))
		--Sul
        ,'Picarras','Balneario Picarras')
        --Suldeste
        ,'Campos Dos Goitacazes','Campos dos Goytacazes')
       	--Centro Oeste / Norte
		,'Vila Bela Da Santissima Trinda','Vila Bela da Santissima Trindade')
       	--Nordeste
		,'Espirito Santo Do Oeste','Parau'),'Assu','Açu'),'Sao Miguel De Touros','Touros')
        ,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX')
		as nome_municipio,
        coalesce(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(initcap(trim(s.nome_municipio))
		--Sul
        ,'Picarras','Balneario Picarras')
        --Suldeste
        ,'Campos Dos Goitacazes','Campos dos Goytacazes')
       	--Centro Oeste / Norte
		,'Vila Bela Da Santissima Trinda','Vila Bela da Santissima Trindade')
		--Nordeste
		,'Espirito Santo Do Oeste','Parau'),'Assu','Açu'),'Sao Miguel De Touros','Touros')
        ,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),'')|| ',' ||coalesce(s.sg_uf,'')
		as municipio_uf,
        s.ed_bairro_distrito ds_bairro, 
        coalesce(s.ed_tipo_logr,'')||' '||coalesce(s.ed_logr,'')||' '||coalesce(s.ed_numero,'')||' '||coalesce(s.ed_complemento,'') 
		as ds_endereco,
        initcap(trim(s.no_natureza_terreno)) ds_natureza, 
		'União (Adm. Pub. Fed. direta)' 
		as tp_proprietario,
        replace(replace(replace(replace(replace(replace(replace(replace(replace(initcap(trim(s.no_conceituacao_terreno))
        ,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com ')
        as ds_conceituacao, 
        s.mq_area_terreno_total 
		as mq_area,
		s.valor_imovel,
		trim(initcap(s.ic_carente)) 
	    as ic_carente,
        string_agg(distinct trim(initcap(s.no_regime_utiliz))::varchar, CHR(10)) 
		as no_regime,
        replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(string_agg(distinct trim(initcap(s.no_resp::varchar)), CHR(10))
 	    ,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com '),' E ',' e ')
		as no_resp,
	    s.mq_area_construida 
		as mq_area_construida,
		s.nu_rip_primitivo,
		trim(initcap(s.no_classe_imov))
		as no_classe_imov,
		s.ed_cep,
		CASE WHEN s.sg_pais = 'BRA' THEN 'Brasileiro' WHEN s.sg_pais is null THEN 'Sem Informação' ELSE 'Estrangeiro' END 
		as ds_nacionalidade_resp,
		trim(s.sg_pais)
		as sg_pais_resp,
		CASE WHEN char_length(s.cpf_cgc) = 14 THEN 'Pessoa Jurídica' WHEN char_length(s.cpf_cgc) = 11 THEN 'Pessoa Física' ELSE 'Indefinido' END 
		as ds_person_juridica_resp,
		s.cpf_cgc
		as nu_cpf_cnpj_resp,
		CASE WHEN s.in_imovel_em_ilha = 'Imóvel em Ilha' THEN 'Sim' WHEN s.in_imovel_em_ilha = 'Normal' THEN 'Não' END
		as st_imovel_em_ilha,
		s.nu_logr_trecho_calculo,
		CASE WHEN s.tx_fundamento_incorporacao is null THEN 'Sem Informação' 
			 ELSE replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace
				  (string_agg(distinct trim(initcap(s.tx_fundamento_incorporacao::varchar)), CHR(10))
 	    		  ,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com ')
				  ,' E ',' e '),' Ou ',' ou ')	
		END ds_fundamento_incorporacao,
		CASE WHEN s.co_tipo_ocupacao = '0' THEN 'Sem Informação' 
			 WHEN s.co_tipo_ocupacao = '1' THEN 'Regular' 
			 WHEN s.co_tipo_ocupacao = '2' THEN 'Aterro' 
			 WHEN s.co_tipo_ocupacao = '3' THEN 'Faixa Praia/Margem' 
			 WHEN s.co_tipo_ocupacao = '4' THEN 'Aterro c/Faixa Praia/Margem' 
		END	ds_tipo_ocupacao,
		s.nu_utiliz,
		s.nu_inscricao_municipal,		
		replace(replace(replace(string_agg(distinct trim(initcap(s.no_situacao_testada::varchar)), CHR(10)),' Ou ',' ou '),' Mais ',' mais '),'Tres ','Três ')
		as ds_situacao_testada,
		s.pe_taxa_ocupacao::int
		as pe_taxa_ocupacao,
		CASE WHEN s.co_tipo_fracao_ideal = 'D' THEN 'Denominador'
          	 WHEN s.co_tipo_fracao_ideal = 'N' THEN 'Numerador'
          	 WHEN s.co_tipo_fracao_ideal = 'P' THEN 'Percentual'
          	 ELSE 'Sem Informação'
      	END ds_tipo_fracao_ideal,
		s.va_generico_m2_terreno_calculo::numeric
		as vl_m2_testada_calculo,
		s.da_informacao_imov::date 
		as dt_informacao_imov,
		s.da_aprovacao_lpm_lmeo::date 
		as dt_aprovacao_lpm_lmeo,
		s.nu_processo_lpm_lmeo,
		s.op_fracao_ideal_percentual,
		s.op_fracao_ideal_numerador,
		s.op_fracao_ideal_denominador,
		s.op_fracao_ideal_decimal,
		CASE WHEN s.co_tipo_fracao_ideal='D' THEN s.op_fracao_ideal_decimal
          	 WHEN s.co_tipo_fracao_ideal='N' THEN (s.op_fracao_ideal_numerador/s.op_fracao_ideal_denominador)
          	 WHEN s.co_tipo_fracao_ideal='P' THEN (s.op_fracao_ideal_percentual/100)
          	 ELSE 0
      	END
		as op_fracao_ideal_calculada,
		s.op_fator_corretivo_total::numeric,
		CASE WHEN s.nu_logr_trecho_calculo = s.nu_logr_trecho_testada1 THEN substring(s.da_inicio_avaliacao_pvg_testada1::text,1,10)::date 
          	 WHEN s.nu_logr_trecho_calculo = s.nu_logr_trecho_testada2 THEN substring(s.da_inicio_avaliacao_pvg_testada2::text,1,10)::date 
          	 WHEN s.nu_logr_trecho_calculo = s.nu_logr_trecho_testada3 THEN substring(s.da_inicio_avaliacao_pvg_testada3::text,1,10)::date 
			 WHEN s.nu_logr_trecho_calculo = s.nu_logr_trecho_testada4 THEN substring(s.da_inicio_avaliacao_pvg_testada4::text,1,10)::date 
          	 ELSE null
      	END
		as dt_avaliacao_testada_calculo,
		s.mq_area_terreno_uniao,
		s.mq_area_uniao_utilizada,
		s.mq_area_primitiva_utilizada,
		null imv_nu_matriculacartorio,
		null no_tipoimovel,
		null no_orgaoextinto,
		null no_proprietarioanterior,
		null no_situacaoincorporacao,
		null::date dt_incorporacao,
		null no_formaaquisicao,
		null::date dt_avaliacao_imovel,
		null nu_rip_utilizacao,
		null no_tipodestinacao,
		null ds_tipo_administracao,
		null uti_nu_processo,
		null ds_poder_uge,
		null ds_orgao_sup_uge,
		null ds_orgao_uge,
		null::int co_ug,
		null no_nivelrigoravaliacao,
		null::date dt_avaliacao_utilizacao,
		null::date dt_cadastro_utilizacao,
		null::date dt_inicio_utilizacao,
		null::date dt_fim_utilizacao,
		null::date dt_prazovalidadeavaliacao,
		null uti_no_beneficiario,
		null::bigint uti_nu_cpfcnpjbeneficiario,
		null uti_no_encargocessao,
		null uti_no_objetivocessao,
		null::numeric(27,4) vl_utilizacao,
		null::numeric(27,4) vl_terreno_imovel,
		null::numeric(27,4) vl_terreno_utilizacao,
		null::numeric vl_aluguel,
		null::numeric(27,4) vl_somabenfeitoria
from bispu.dw_siapa.ods_siapa_gestao s  
group by s.nu_rip, substring(coalesce(da_informacao_imov, da_inclusao_cad_imov),7,4), s.sg_uf, s.nome_municipio, s.ed_bairro_distrito, 
         (coalesce(s.ed_tipo_logr,'')||' '||coalesce(s.ed_logr,'')||' '||coalesce(s.ed_numero,'')||' '||coalesce(s.ed_complemento,'')),
         s.no_natureza_terreno,s.no_conceituacao_terreno, s.mq_area_terreno_uniao, s.valor_imovel, s.ic_carente, s.nu_rip_primitivo,
		 s.no_classe_imov, s.ed_cep, s.sg_pais, s.cpf_cgc, s.in_imovel_em_ilha, s.nu_logr_trecho_calculo, s.tx_fundamento_incorporacao,
		 s.co_tipo_ocupacao, s.nu_utiliz, s.nu_inscricao_municipal, s.no_situacao_testada, s.pe_taxa_ocupacao, s.co_tipo_fracao_ideal,
		 s.va_generico_m2_terreno_calculo, s.da_informacao_imov, s.da_aprovacao_lpm_lmeo, s.nu_processo_lpm_lmeo, s.op_fracao_ideal_percentual,
		 s.op_fracao_ideal_numerador, s.op_fracao_ideal_denominador, s.op_fracao_ideal_decimal, s.op_fator_corretivo_total, s.nu_logr_trecho_testada1,
		 s.nu_logr_trecho_testada2, s.nu_logr_trecho_testada3, s.nu_logr_trecho_testada4, s.da_inicio_avaliacao_pvg_testada1,
		 s.da_inicio_avaliacao_pvg_testada2, s.da_inicio_avaliacao_pvg_testada3, s.da_inicio_avaliacao_pvg_testada4, s.mq_area_terreno_total,
		 s.mq_area_construida, s.mq_area_terreno_uniao, s.mq_area_uniao_utilizada, s.mq_area_primitiva_utilizada

union
 select distinct
		'USO ESPECIAL'::varchar(12) 
		as fonte,
       	s.nu_rip_imovel::varchar(13) 
		as nu_rip,
		substring(dt_cadastro_imovel::text,1,4) 
		as dt_cadastro_imovel, 
		s.sg_uf,
		(select distinct max(u.nm_uf) from bispu.public.tb_uf u where u.sg_uf = s.sg_uf)
		as nm_uf,
       	case when initcap(trim(s.no_municipio)) = 'Campo Grande' and s.sg_uf = 'RN' then 'Augusto Severo'::text 
       	else
		replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(
       	replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(initcap(trim(s.no_municipio))
		--Sul
		,'Picarras','Balneario Picarras'),'Sao Lourenco D''Oeste','Sao Lourenco do Oeste'),'Santa Cruz Do Monte Castelo','Santa Cruz de Monte Castelo'),'Goio-Ere','Goioere')
		--Suldeste
		,'Suzanopolis','Suzanapolis'),'Sud Mennuci','Sud Mennucci'),'Mogi-Guacu','Mogi Guacu'),'Mogi-Mirim','Mogi Mirim')
		,'Campos Dos Goitacazes','Campos dos Goytacazes'),'Trajano De Morais','Trajano de Moraes'),'Sao Tome Das Letras','Sao Thome das Letras')
       	--Centro Oeste / Norte
		,'Vila Bela Da Santissima Trinda','Vila Bela da Santissima Trindade'),'Nova Do Mamore','Nova Mamore')
		--Nordeste
		,'Luiz Eduardo Magalhaes','Luis Eduardo Magalhaes'),'Lagedo Do Tabocal','Lajedo do Tabocal'),'Graccho Cardoso','Gracho Cardoso'),'Belem De Sao Francisco','Belem do Sao Francisco')
		,'Sao Domingos De Pombal','Sao Domingos'),'Campo De Santana','Tacima'),'Assu','Açu'),'Sao Miguel De Touros','Touros'),'Boa Saude','Januario Cicco'),'Cerro-Cora','Cerro Cora')	
		,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX') 
		end nome_municipio,
		case when initcap(trim(s.no_municipio)) = 'Campo Grande' and s.sg_uf = 'RN' then 'Augusto Severo,RN'::text 
        else
		coalesce(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(
		replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(initcap(trim(s.no_municipio))
		--Sul
       	,'Picarras','Balneario Picarras'),'Sao Lourenco D''Oeste','Sao Lourenco do Oeste'),'Santa Cruz Do Monte Castelo','Santa Cruz de Monte Castelo'),'Goio-Ere','Goioere')
		--Suldeste
       	,'Suzanopolis','Suzanapolis'),'Sud Mennuci','Sud Mennucci'),'Mogi-Guacu','Mogi Guacu'),'Mogi-Mirim','Mogi Mirim')
       	,'Campos Dos Goitacazes','Campos dos Goytacazes'),'Trajano De Morais','Trajano de Moraes'),'Sao Tome Das Letras','Sao Thome das Letras')
		--Centro Oeste / Norte
		,'Vila Bela Da Santissima Trinda','Vila Bela da Santissima Trindade'),'Nova Do Mamore','Nova Mamore')
		--Nordeste
		,'Luiz Eduardo Magalhaes','Luis Eduardo Magalhaes'),'Lagedo Do Tabocal','Lajedo do Tabocal'),'Graccho Cardoso','Gracho Cardoso'),'Belem De Sao Francisco','Belem do Sao Francisco')
		,'Sao Domingos De Pombal','Sao Domingos'),'Campo De Santana','Tacima'),'Assu','Açu'),'Sao Miguel De Touros','Touros'),'Boa Saude','Januario Cicco'),'Cerro-Cora','Cerro Cora')	
       	,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),'')|| ',' ||coalesce(s.sg_uf,'') 
		end municipio_uf,
       	s.ed_bairro_imovel ds_bairro, 
       	coalesce(s.ed_tipologradouro_imovel,'')||' '||coalesce(s.ed_logradouro_imovel,'')||' '||coalesce(s.ed_numero_imovel,'')||' '||coalesce(s.ed_complemento_imovel) 
		as ds_endereco,
        trim(s.no_naturezaterreno) 
		as ds_natureza, 
		s.no_proprietariooficial 
		as tp_proprietario, 
		s.no_conceituacaoterreno 
		as ds_conceituacao,
       	sum(s.mq_areaterreno_utilizacao)
		as mq_area, 
       	sum(s.vl_imovel) --s.vl_terreno_utilizacao
		as valor_imovel, 
		'Não'::varchar(3) 
		as ic_carente, 
       	string_agg(distinct trim(initcap(s.no_regime))::varchar, CHR(10)) 
		as no_regime,
       	replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(string_agg(distinct trim(initcap(s.no_ug::varchar)), CHR(10))
	   	,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com '),' E ',' e ') 
		as no_resp,
       	(select distinct max(o.mq_areaconstruida) from bispu.dw_spiunet.ods_spiunet o where o.nu_rip_imovel = s.nu_rip_imovel) 
		as mq_area_construida,
		null nu_rip_primitivo,
		null no_classe_imov,
		s.ed_cep_imovel::varchar(8)
		as ed_cep,
		null ds_nacionalidade_resp,
		null sg_pais_resp,
		null ds_person_juridica_resp,
		null nu_cpf_cnpj_resp,	
		null st_imovel_em_ilha,
		null nu_logr_trecho_calculo,
		null ds_fundamento_incorporacao,
		null ds_tipo_ocupacao,
		null nu_utiliz,
		null nu_inscricao_municipal,
		null ds_situacao_testada,
		null::int pe_taxa_ocupacao,
		null ds_tipo_fracao_ideal,
		null::numeric vl_m2_testada_calculo,
		null::date dt_informacao_imov,
		null::date dt_aprovacao_lpm_lmeo,
		null nu_processo_lpm_lmeo,
		null::numeric(17,7) op_fracao_ideal_percentual,
		null::numeric(14,2) op_fracao_ideal_numerador,
		null::numeric(14,2) op_fracao_ideal_denominador,
		null::numeric(19,7) op_fracao_ideal_decimal,
		null::numeric op_fracao_ideal_calculada,
		null::numeric op_fator_corretivo_total,
		null::date dt_avaliacao_testada_calculo,
		null::numeric mq_area_terreno_uniao,		
		null::numeric mq_area_uniao_utilizada,
		null::numeric mq_area_primitiva_utilizada,
		s.imv_nu_matriculacartorio,
		s.no_tipoimovel,
		CASE WHEN s.no_orgaoextinto = 'SEM INFORMACAO' THEN 'Sem Informação' ELSE s.no_orgaoextinto END
		as no_orgaoextinto,
		replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(string_agg(distinct trim(initcap(s.no_proprietarioanterior::varchar)), CHR(10))
	   	,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com '),' E ',' e ')
		,' Informacao',' Informação'),' Rffsa',' RFFSA'),
		CASE WHEN s.no_situacaoincorporacao = 'Em Processo de Incorporacao' THEN 'Em Processo de Incorporação' ELSE s.no_situacaoincorporacao 
		END no_situacaoincorporacao,
		s.dt_incorporacao::date,
		s.no_formaaquisicao,
		s.dt_avaliacao_imovel::date,
		s.nu_rip_utilizacao::varchar(13),
		s.no_tipodestinacao,
		replace(string_agg(distinct trim(initcap((select distinct max(o.ds_tipo_administracao) from bispu.dw_spiunet.dim_orgao_siafi o where o.ug_executora::int = s.co_ug)::varchar)), CHR(10)),' E ',' e ')		
		as ds_tipo_administracao,
		s.uti_nu_processo,
		CASE WHEN (select distinct max(o.ds_poder_uge) from bispu.dw_spiunet.dim_orgao_siafi o where o.ug_executora::int = s.co_ug)::varchar = 'PODER EXECUTIVO' THEN 'Executivo'
          	 WHEN (select distinct max(o.ds_poder_uge) from bispu.dw_spiunet.dim_orgao_siafi o where o.ug_executora::int = s.co_ug)::varchar ='PODER JUDICIARIO' THEN 'Judiciário'
          	 WHEN (select distinct max(o.ds_poder_uge) from bispu.dw_spiunet.dim_orgao_siafi o where o.ug_executora::int = s.co_ug)::varchar ='PODER LEGISLATIVO' THEN 'Legislativo'
          	 ELSE 'Sem Informação'
      	END ds_poder_uge,
       	replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(
		string_agg(distinct trim(initcap((select distinct max(o.ds_orgao_sup_uge) from bispu.dw_spiunet.dim_orgao_siafi o where o.ug_executora::int = s.co_ug)::varchar)), CHR(10))
	   	,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com '),' E ',' e ') ,' A ',' a ')
		as ds_orgao_sup_uge,
		replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(
		string_agg(distinct trim(initcap((select distinct max(o.ds_orgao_uge) from bispu.dw_spiunet.dim_orgao_siafi o where o.ug_executora::int = s.co_ug)::varchar)), CHR(10))
	   	,' Do ',' do '),' De ',' de '),' Da ',' da '),' Dos ',' dos '),' Das ',' das '),' Xii',' XII'),' Ii',' II'),' Ix',' IX'),' Com ',' com '),' E ',' e ') ,' A ',' a ')
		as ds_orgao_uge,
		s.co_ug,
		CASE WHEN s.no_nivelrigoravaliacao = 'SI' THEN 'Sem Informação' ELSE s.no_nivelrigoravaliacao 
		END no_nivelrigoravaliacao,
		s.dt_avaliacao_utilizacao::date,
		s.dt_cadastro_utilizacao::date,
		s.dt_inicio_utilizacao::date,
		s.dt_fim_utilizacao::date,
		s.dt_prazovalidadeavaliacao,
		s.uti_no_beneficiario,
		s.uti_nu_cpfcnpjbeneficiario::bigint,
		s.uti_no_encargocessao,
		s.uti_no_objetivocessao,
		s.vl_utilizacao::numeric(27,4),
		s.vl_terreno_imovel::numeric(27,4),
		s.vl_terreno_utilizacao::numeric(27,4),
		s.vl_aluguel::numeric,
		s.vl_somabenfeitoria::numeric(27,4)
 from bispu.dw_spiunet.ods_spiunet s
 group by s.nu_rip_imovel, substring(dt_cadastro_imovel::text,1,4), s.sg_uf, s.no_municipio, s.ed_bairro_imovel,
       	coalesce(s.ed_tipologradouro_imovel,'')||' '||coalesce(s.ed_logradouro_imovel,'')||' '||coalesce(s.ed_numero_imovel,'')||' '||coalesce(s.ed_complemento_imovel),
       	s.no_naturezaterreno, s.no_proprietariooficial,  s.no_conceituacaoterreno, s.ed_cep_imovel, s.imv_nu_matriculacartorio, s.no_tipoimovel, s.no_orgaoextinto,
	   	s.no_proprietarioanterior, s.no_situacaoincorporacao, s.dt_incorporacao, s.no_formaaquisicao, s.dt_avaliacao_imovel, s.nu_rip_utilizacao, s.no_tipodestinacao, s.co_ug,
		s.uti_nu_processo, s.no_nivelrigoravaliacao, s.dt_avaliacao_utilizacao, s.dt_cadastro_utilizacao, s.dt_inicio_utilizacao, s.dt_fim_utilizacao, s.dt_prazovalidadeavaliacao,
		s.uti_no_beneficiario, s.uti_nu_cpfcnpjbeneficiario, s.uti_no_encargocessao, s.uti_no_objetivocessao, s.vl_utilizacao, s.vl_terreno_imovel, s.vl_terreno_utilizacao,
		s.vl_aluguel, s.vl_somabenfeitoria</sql>
    <limit/>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>752</xloc>
      <yloc>64</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>imoveisfederais</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>dbSpin</connection>
    <sql>select CASE WHEN RTRIM(sl.no_sistema_legado) = 'SIAPA' THEN 'DOMINIAL' WHEN RTRIM(sl.no_sistema_legado) = 'SPIUNET' THEN 'USO ESPECIAL' END::VARCHAR(12) no_sistema_legado,
       i.cd_rip::bigint cd_rip,
       i.vl_latitude, i.vl_longitude--, i.id_nivel_precisao
  from cartografia.imv_imovel i 
       inner join dominios.dom_sistema_legado sl on sl.id_sistema_legado = i.id_sistema_legado
 where cd_rip is not null and i.vl_latitude is not null and i.vl_longitude is not null and i.id_nivel_precisao in (3,4,5)
order by 1, 2
--limit 10</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>112</xloc>
      <yloc>176</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
  <attributes/>
</transformation>
